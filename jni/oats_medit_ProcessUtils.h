/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class oats_medit_ProcessUtils */

#ifndef _Included_oats_medit_ProcessUtils
#define _Included_oats_medit_ProcessUtils
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     oats_medit_ProcessUtils
 * Method:    getActiveProcessList
 * Signature: ()[I
 */
JNIEXPORT jintArray JNICALL Java_oats_medit_ProcessUtils_getActiveProcessList
  (JNIEnv *, jclass);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    getProcessName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_oats_medit_ProcessUtils_getProcessName
  (JNIEnv *, jclass, jint);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    getProcessHandle
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_oats_medit_ProcessUtils_getProcessHandle
  (JNIEnv *, jclass, jint);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    closeProcessHandle
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_oats_medit_ProcessUtils_closeProcessHandle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    writeByteAddress
 * Signature: (JJB)V
 */
JNIEXPORT void JNICALL Java_oats_medit_ProcessUtils_writeByteAddress
  (JNIEnv *, jclass, jlong, jlong, jbyte);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    writeShortAddress
 * Signature: (JJS)V
 */
JNIEXPORT void JNICALL Java_oats_medit_ProcessUtils_writeShortAddress
  (JNIEnv *, jclass, jlong, jlong, jshort);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    writeIntAddress
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_oats_medit_ProcessUtils_writeIntAddress
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    writeLongAddress
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_oats_medit_ProcessUtils_writeLongAddress
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    writeFloatAddress
 * Signature: (JJF)V
 */
JNIEXPORT void JNICALL Java_oats_medit_ProcessUtils_writeFloatAddress
  (JNIEnv *, jclass, jlong, jlong, jfloat);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    writeDoubleAddress
 * Signature: (JJD)V
 */
JNIEXPORT void JNICALL Java_oats_medit_ProcessUtils_writeDoubleAddress
  (JNIEnv *, jclass, jlong, jlong, jdouble);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    readByteAddress
 * Signature: (JJ)B
 */
JNIEXPORT jbyte JNICALL Java_oats_medit_ProcessUtils_readByteAddress
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    readShortAddress
 * Signature: (JJ)S
 */
JNIEXPORT jshort JNICALL Java_oats_medit_ProcessUtils_readShortAddress
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    readIntAddress
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_oats_medit_ProcessUtils_readIntAddress
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    readLongAddress
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_oats_medit_ProcessUtils_readLongAddress
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    readFloatAddress
 * Signature: (JJ)F
 */
JNIEXPORT jfloat JNICALL Java_oats_medit_ProcessUtils_readFloatAddress
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    readDoubleAddress
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_oats_medit_ProcessUtils_readDoubleAddress
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    getNextRegionAddress
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_oats_medit_ProcessUtils_getNextRegionAddress
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    getNextRegionSize
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_oats_medit_ProcessUtils_getNextRegionSize
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     oats_medit_ProcessUtils
 * Method:    readRegionMemory
 * Signature: (JJJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_oats_medit_ProcessUtils_readRegionMemory
  (JNIEnv *, jclass, jlong, jlong, jlong);

#ifdef __cplusplus
}
#endif
#endif
